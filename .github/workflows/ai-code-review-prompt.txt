以下はPRの差分です。出力はMarkdown形式で日本語でお願いします。レビュー観点は以下の通りです:
【コード品質】
・命名の一貫性が保たれているか
・命名から処理内容が想像できて、間違った使い方がされない（副作用があるならそれがわかるような）程度の分かりやすさになっているか
・シンプルで読みやすい記述で、不要な処理がないか
・単一責任の原則が守られており、修正しやすい設計になっているか
・一貫したアーキテクチャ（レイヤーの責務・命名規則など）が維持されているか

【エラーハンドリング】
・エラーを起こす可能性のあるコードにはエラーハンドリングが行われているか
・適切な例外クラスを使用しているか
　・分かりやすいように独自例外を用いているか

【テスト】
・正常系: 取得や更新時に期待した結果が得られるか、境界値やエッジケース（null、空配列等）も考慮されているか
・異常系: 例外が適切に発生しているか

【セキュリティ】
・セキュリティの脅威が存在しないか。懸念があればその点について質問する

【パフォーマンス】
・DBの観点
　・DBへのSQL発行回数が多くないか
　・N+1になっていないか
　・indexが効かないSQLになっていないか
　・Joinが多く使われたSQLになっていないか
　・他にもDBのパフォーマンスが悪くなるものについて指摘すること
・計算量の観点
　・O(n²)とO(2ⁿ)のような実装になっていないか

以下に差分があります: