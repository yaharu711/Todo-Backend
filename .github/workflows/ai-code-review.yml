# .github/workflows/ai-code-review.yml
name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create diff file
        run: |
          DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
          git fetch origin $DEFAULT_BRANCH
          git diff origin/$DEFAULT_BRANCH..HEAD > diff.patch
          echo "Created diff file:"
          cat diff.patch

      - name: Create payload.json using jq
        run: |
          jq -n --arg prompt "以下はPRの差分です。出力はMarkdown形式で日本語でお願いします。レビュー観点は以下の通りです:
          【コード品質】
          ・命名の一貫性が保たれているか
          ・シンプルで読みやすい記述で、不要な処理がないか
          ・単一責任の原則が守られており、修正しやすい設計になっているか
          ・一貫したアーキテクチャ（レイヤーの責務・命名規則など）が維持されているか

          【テスト】
          ・正常系: 取得や更新時に期待した結果が得られるか、境界値やエッジケース（null、空配列等）も考慮されているか
          ・異常系: 例外が適切に発生しているか

          【セキュリティ】
          ・セキュリティの脅威が存在しないか。懸念があればその点について質問する

          以下に差分があります:" \
            --rawfile diff diff.patch \
            '{
              "model": "gpt-4o",
              "messages": [
                {
                  "role": "user",
                  "content": ($prompt + "\n\n" + $diff)
                }
              ],
              "temperature": 0.2
            }' > payload.json
      - name: Call OpenAI API for review
        id: openai_review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          curl -sS https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d @payload.json > response.json
          # エラーが返ってきていないかチェック
          if jq -e '.error' response.json > /dev/null; then
            echo "Error from OpenAI API:" >&2
            jq .error response.json >&2
            exit 1
          fi
          echo "Response from OpenAI:"
          cat response.json
          REVIEW_COMMENT=$(jq -r '.choices[0].message.content' response.json)
          echo "review_comment<<EOF_REVIEW" >> $GITHUB_OUTPUT
          echo "$REVIEW_COMMENT" >> $GITHUB_OUTPUT
          echo "EOF_REVIEW" >> $GITHUB_OUTPUT

      - name: Post review comment to PR
        uses: actions/github-script@v6
        with:
          script: |
            const reviewComment = JSON.parse(${{ toJson(steps.openai_review.outputs.review_comment) }});
            if (!reviewComment || reviewComment === "null") {
              throw new Error("No review comment generated.");
            }
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: reviewComment
            });
